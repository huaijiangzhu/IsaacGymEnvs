hydra:
  run:
    dir: .
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    root:
      level: ERROR
    disable_existing_loggers: true
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: null
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - seed=1,2,3
  job:
    name: train
    chdir: null
    override_dirname: seed=1,2,3
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.2.0
    version_base: '1.1'
    cwd: /home/hz/devel/IsaacGymEnvs/isaacgymenvs
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/hz/devel/IsaacGymEnvs/isaacgymenvs/cfg
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      task: TrifingerNYU
      train: TrifingerNYUPPO
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: disabled
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
task:
  name: TrifingerNYU
  physics_engine: ${..physics_engine}
  env:
    aggregate_mode: true
    control_decimation: 1
    envSpacing: 1.0
    numEnvs: ${resolve_default:8192,${...num_envs}}
    episodeLength: 750
    clipObservations: 5.0
    clipActions: 1.0
    task_difficulty: -1
    enable_ft_sensors: false
    asymmetric_obs: true
    normalize_obs: true
    apply_safety_damping: true
    command_mode: torque
    normalize_action: true
    cube_obs_keypoints: true
    reset_distribution:
      object_initial_state:
        type: random
      robot_initial_state:
        dof_pos_stddev: 0.4
        dof_vel_stddev: 0.2
        type: default
    reward_terms:
      finger_move_penalty:
        activate: true
        weight: -0.5
      finger_reach_object_rate:
        activate: true
        norm_p: 2
        weight: -250
      object_dist:
        activate: false
        weight: 2000
      object_rot:
        activate: false
        weight: 2000
      keypoints_dist:
        activate: true
        weight: 2000
    termination_conditions:
      success:
        orientation_tolerance: 0.4
        position_tolerance: 0.02
    enableCameraSensors: false
  sim:
    dt: 0.02
    substeps: 4
    up_axis: z
    use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
    gravity:
    - 0.0
    - 0.0
    - -9.81
    physx:
      num_threads: ${....num_threads}
      solver_type: ${....solver_type}
      use_gpu: ${contains:"cuda",${....sim_device}}
      num_position_iterations: 8
      num_velocity_iterations: 0
      contact_offset: 0.002
      rest_offset: 0.0
      bounce_threshold_velocity: 0.5
      max_depenetration_velocity: 1000.0
      default_buffer_size_multiplier: 5.0
      max_gpu_contact_pairs: 8388608
      num_subscenes: ${....num_subscenes}
      contact_collection: 0
  task:
    randomize: false
    randomization_params:
      frequency: 750
      observations:
        range:
        - 0
        - 0.002
        range_correlated:
        - 0
        - 0.0
        operation: additive
        distribution: gaussian
      actions:
        range:
        - 0.0
        - 0.02
        range_correlated:
        - 0
        - 0.01
        operation: additive
        distribution: gaussian
      sim_params:
        gravity:
          range:
          - 0
          - 0.4
          operation: additive
          distribution: gaussian
      actor_params:
        robot:
          color: true
          dof_properties:
            lower:
              range:
              - 0
              - 0.01
              operation: additive
              distribution: gaussian
            upper:
              range:
              - 0
              - 0.01
              operation: additive
              distribution: gaussian
        object:
          scale:
            range:
            - 0.97
            - 1.03
            operation: scaling
            distribution: uniform
            setup_only: true
          rigid_body_properties:
            mass:
              range:
              - 0.7
              - 1.3
              operation: scaling
              distribution: uniform
              setup_only: true
          rigid_shape_properties:
            friction:
              num_buckets: 250
              range:
              - 0.7
              - 1.3
              operation: scaling
              distribution: uniform
        table:
          rigid_shape_properties:
            friction:
              num_buckets: 250
              range:
              - 0.5
              - 1.5
              operation: scaling
              distribution: uniform
train:
  asymmetric_obs: true
  params:
    seed: ${...seed}
    algo:
      name: a2c_continuous
    model:
      name: continuous_a2c_logstd
    network:
      name: actor_critic
      separate: false
      space:
        continuous:
          mu_activation: None
          sigma_activation: None
          mu_init:
            name: default
          sigma_init:
            name: const_initializer
            val: 0
          fixed_sigma: true
      mlp:
        units:
        - 256
        - 256
        - 128
        - 128
        activation: elu
        d2rl: false
        initializer:
          name: default
        regularizer:
          name: None
    load_checkpoint: ${if:${...checkpoint},True,False}
    load_path: ${...checkpoint}
    config:
      name: ${resolve_default:TrifingerNYU,${....experiment}}
      full_experiment_name: ${.name}
      env_name: rlgpu
      multi_gpu: ${....multi_gpu}
      ppo: true
      mixed_precision: false
      normalize_input: true
      normalize_value: true
      reward_shaper:
        scale_value: 0.01
      normalize_advantage: true
      gamma: 0.99
      tau: 0.95
      learning_rate: 0.0003
      lr_schedule: constant
      use_experimental_cv: true
      schedule_type: standard
      kl_threshold: 0.016
      score_to_win: 500000
      max_epochs: ${resolve_default:3,${....max_iterations}}
      save_best_after: 100
      save_frequency: 100
      print_stats: true
      grad_norm: 1.0
      entropy_coef: 0.0
      truncate_grads: true
      e_clip: 0.2
      horizon_length: 16
      minibatch_size: ${.num_actors}
      mini_epochs: 4
      critic_coef: 4
      clip_value: true
      seq_len: 4
      bounds_loss_coef: 0.0001
      central_value_config:
        minibatch_size: ${..num_actors}
        mini_epochs: ${..mini_epochs}
        learning_rate: 0.0005
        lr_schedule: linear
        schedule_type: standard
        kl_threshold: 0.016
        clip_value: true
        normalize_input: true
        truncate_grads: true
        network:
          name: actor_critic
          central_value: true
          mlp:
            units:
            - 512
            - 512
            - 256
            - 128
            activation: elu
            d2rl: false
            initializer:
              name: default
            regularizer:
              name: None
      player:
        deterministic: true
        games_num: 80
        print_stats: false
      num_actors: ${....task.env.numEnvs}
task_name: ${task.name}
experiment: ''
num_envs: ''
seed: 42
torch_deterministic: false
max_iterations: ''
physics_engine: physx
pipeline: gpu
sim_device: cuda:0
rl_device: cuda:0
graphics_device_id: 0
num_threads: 4
solver_type: 1
num_subscenes: 4
test: false
checkpoint: ''
multi_gpu: false
wandb_activate: false
wandb_group: trifinger_with_grasp_rwd
wandb_name: ${train.params.config.name}
wandb_entity: hjzhu
wandb_project: trifinger_isaac
capture_video: false
capture_video_freq: 750
capture_video_len: 200
force_render: true
headless: true
